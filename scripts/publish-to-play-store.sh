#!/bin/bash

# üöÄ Script de Publica√ß√£o - Obra Limpa
# Este script automatiza o processo de publica√ß√£o na Play Store

echo "üèóÔ∏è Iniciando processo de publica√ß√£o do Obra Limpa..."

# 1. Verificar se o EAS CLI est√° instalado
if ! command -v eas &> /dev/null; then
    echo "‚ùå EAS CLI n√£o encontrado. Instalando..."
    npm install -g @expo/eas-cli
fi

# 2. Verificar se est√° logado no Expo
echo "üîê Verificando login no Expo..."
if ! eas whoami &> /dev/null; then
    echo "‚ùå N√£o est√° logado no Expo. Fa√ßa login:"
    eas login
fi

# 3. Verificar se o projeto est√° configurado
echo "‚öôÔ∏è Verificando configura√ß√£o do projeto..."
if [ ! -f "eas.json" ]; then
    echo "‚ùå eas.json n√£o encontrado. Configurando..."
    eas build:configure
fi

# 4. Atualizar version code
echo "üìù Atualizando version code..."

# Verificar se existe app.config.js
if [ -f "app.config.js" ]; then
    # Extrair o versionCode atual usando grep e regex
    CURRENT_VERSION=$(grep -oP 'versionCode:\s*\K\d+' app.config.js)
    
    if [ -n "$CURRENT_VERSION" ]; then
        NEW_VERSION=$((CURRENT_VERSION + 1))
        
        # Substituir o versionCode no arquivo
        sed -i "s/versionCode:\s*$CURRENT_VERSION/versionCode: $NEW_VERSION/" app.config.js
        echo "‚úÖ Version code atualizado para: $NEW_VERSION"
    else
        echo "‚ùå N√£o foi poss√≠vel encontrar versionCode em app.config.js"
        exit 1
    fi
else
    # Fallback para app.json se existir
    if [ -f "app.json" ]; then
        CURRENT_VERSION=$(grep '"versionCode":' app.json | sed 's/.*"versionCode": \([0-9]*\).*/\1/')
        NEW_VERSION=$((CURRENT_VERSION + 1))
        sed -i "s/\"versionCode\": $CURRENT_VERSION/\"versionCode\": $NEW_VERSION/" app.json
        echo "‚úÖ Version code atualizado para: $NEW_VERSION"
    else
        echo "‚ùå N√£o foi poss√≠vel encontrar app.config.js ou app.json"
        exit 1
    fi
fi

# 5. Gerar build de produ√ß√£o
echo "üî® Gerando build de produ√ß√£o..."
eas build --platform android --profile production

# 6. Aguardar conclus√£o do build
echo "‚è≥ Aguardando conclus√£o do build..."
BUILD_ID=$(eas build:list --platform android --limit 1 --json | jq -r '.[0].id')
echo "üì± Build ID: $BUILD_ID"

# 7. Verificar status do build
while true; do
    STATUS=$(eas build:view $BUILD_ID --json | jq -r '.status')
    echo "üìä Status do build: $STATUS"

    if [ "$STATUS" = "finished" ]; then
        echo "‚úÖ Build conclu√≠do com sucesso!"
        break
    elif [ "$STATUS" = "errored" ]; then
        echo "‚ùå Erro no build. Verifique os logs:"
        eas build:view $BUILD_ID
        exit 1
    fi

    echo "‚è≥ Aguardando 30 segundos..."
    sleep 30
done

# 8. Baixar o AAB
echo "üì• Baixando arquivo AAB..."
eas build:download $BUILD_ID

# 9. Instru√ß√µes para Play Console
echo ""
echo "üéâ Build gerado com sucesso!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Acesse: https://play.google.com/console"
echo "2. Crie uma conta (R$ 25)"
echo "3. Crie um novo app"
echo "4. Fa√ßa upload do arquivo AAB baixado"
echo "5. Configure as informa√ß√µes do app"
echo "6. Adicione screenshots"
echo "7. Configure pol√≠tica de privacidade"
echo "8. Submeta para revis√£o"
echo ""
echo "üìÅ Arquivo AAB: ./builds/obra-limpa.aab"
echo "üìä Build ID: $BUILD_ID"
echo ""
echo "üöÄ Boa sorte com a publica√ß√£o!"
